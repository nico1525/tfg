@inject NavigationManager Navigation
@page "/consumo"
@using Web.Helpers;
@layout NavBarLogged
@inherits LayoutComponentBase

<PageTitle>Consumo de dispositivos</PageTitle>


<style>
    #tipolabel {
        font-size: 22px;
        margin-left: 1%;
        float: left;
        margin-top: 1%;
    }

    #text {
        text-align: center;
    }

    #navbar {
        margin-bottom: 2%;
    }

    #form {
        float: left;
        margin-top: 1%;
    }

    #button {
        font-size: 18px;
        margin-left: 30px;
        margin-top: 1%;
    }

    #select {
        font-size: 18px;
        margin-left: 30px;
    }

    #dispositivo {
        margin: 2% 15% 0 15%;
        height: 100%;
    }

    #inilabel {
        font-size: 35px;
    }
</style>

<body>
    <div id="navbar"></div>
    <div id="text"> <label id="inilabel">Consumo de Dispositivos</label></div>
    <label id="tipolabel">Tipo de dispositivo:</label>
    <div id="form">
        <select @bind="dispositivo" id="select">
            <option value="vehiculo">Vehiculo</option>
            <option value="transporte">Transporte</option>
            <option value="maquinaria">Maquinaria</option>
            <option value="emisionesfugitivas">Emisiones Fugitivas</option>
            <option value="InstalacionesFijas">Instalaciones Fijas</option>
            <option value="otrosconsumos">Consumos de otras fuentes</option>
            <option value="electricidad">Dispositivo eléctrico</option>
        </select>
    </div>
    <button id="button" @onclick="SelectDispositivo">Elegir tipo Dispositivo</button>
    <div id="dispositivo">
        @Body
    </div>
</body>

@code {
    private string? dispositivo = "vehiculo";

    public void SelectDispositivo()
    {
        if (dispositivo.Equals("otrosconsumos"))
        {
            Navigation.NavigateTo("consumo/otrosconsumos");
            return;
        }
        Navigation.NavigateTo("consumo/" + dispositivo + "/0");
    }
    protected override async Task OnInitializedAsync()
    {
        if (Storage.token == null)
        {
            Navigation.NavigateTo("");
            return;
        }
    }
}